generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Shortlink {
	id          String    @id @default(uuid())
	creatorIp   String
	user        User?     @relation(fields: [userId], references: [id])
	userId      String?
	shortcode   String    @unique
	shortlink   String    @unique
	destination String
	secret      String    @unique
	checked     Boolean   @default(false)
	disabled    Boolean   @default(false)
	hits        Int       @default(0)
	createdAt   DateTime  @default(now())
	updatedAt   DateTime  @updatedAt @default(now())
	expiresAt   DateTime?
}

model User {
	id         String      @id @default(uuid())
	username   String
	email      String      @unique
	sub        String      @unique
	admin      Boolean     @default(false)
	apiKey     String      @unique
	nextApiKey DateTime    @default(now())
	shortlinks Shortlink[]
	createdAt  DateTime    @default(now())
	updatedAt  DateTime    @updatedAt @default(now())
}

model Feature {
	id        String   @id @default(uuid())
	name      String   @unique
	enabled   Boolean
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt @default(now())
}

model TokenBucket {
	id         String      @id @default(uuid())
	name       String      @unique
	identifier String      @unique
	limit      Int
	interval   Int
	cost       Int         @default(1)
	rateLimits RateLimit[]
	createdAt  DateTime    @default(now())
	updatedAt  DateTime    @updatedAt @default(now())
}

model RateLimit {
	id               String      @id @default(uuid())
	bucket           TokenBucket @relation(fields: [bucketIdentifier], references: [identifier])
	bucketIdentifier String
	identifier       String
	expiresAt        DateTime
	createdAt        DateTime    @default(now())
}
